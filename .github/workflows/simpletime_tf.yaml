name: Terraform Pipeline for creating the infrastructure and also for deploying the simpletimesvc on the ECS fargate cluster

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Create DynamoDB Table for Locking
        run: |
          aws dynamodb describe-table --table-name terraform-locks || \
          aws dynamodb create-table \
            --table-name terraform-locks \
            --attribute-definitions AttributeName=LockID,AttributeType=S \
            --key-schema AttributeName=LockID,KeyType=HASH \
            --provisioned-throughput ReadCapacityUnits=5,WriteCapacityUnits=5
      
      - name: Wait for DynamoDB Table to become ACTIVE
        run: |
          echo "Waiting for terraform-locks table to become ACTIVE..."
          while true; do
            STATUS=$(aws dynamodb describe-table --table-name terraform-locks --query "Table.TableStatus" --output text)
            echo "Current status: $STATUS"
            if [ "$STATUS" == "ACTIVE" ]; then
              echo "DynamoDB table is ACTIVE."
              break
            fi
            echo "Waiting 5 seconds..."
            sleep 5
          done

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan

      - name: Terraform Apply or Destroy
        working-directory: ./terraform
        run: |
          if [[ "${{ github.event.inputs.action }}" == "destroy" ]]; then
            terraform destroy -auto-approve
          else
            terraform apply -auto-approve
          fi

